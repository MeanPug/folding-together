
---
AWSTemplateFormatVersion: 2010-09-09
Description: Donation processing resources
Parameters:
  TableArn:
    Description: ARN of the DynamoDB table for storing balances
    Type: String
  TableName:
    Description: Name of the DynamoDB table for storing balances
    Type: String
Resources:
  Queue:
    Type: AWS::SQS::Queue
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W48 ## skip for MVP
            reason: Queue encryption skipped for MVP

  DonationProcessorRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: CloudWatch actions do not support resource-level permissions.
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub lambda.${AWS::URLSuffix}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UpdateBalance
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: dynamodb:UpdateItem
                Resource: !Ref TableArn
        - PolicyName: QueueProcessing
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ReceiveMessage
                Resource: !GetAtt Queue.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  DonationProcessor:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: folding-together-artifacts
        S3Key: lambda/donation_processor.zip
      Environment:
        Variables:
          TableName: !Ref TableName
      Handler: donation_processor.lambda_handler
      Role: !GetAtt DonationProcessorRole.Arn
      Runtime: python3.8

  DonationProcessorPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DonationProcessor.Arn
      Principal: !Sub sqs.${AWS::URLSuffix}
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt Queue.Arn

  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt Queue.Arn
      FunctionName: !GetAtt DonationProcessor.Arn
