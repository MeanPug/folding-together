# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: folding-together-launch-fah

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.7

  iamRoleStatements:
  - Effect: "Allow"
    Resource: "*"
    Action:
      - "cloudformation:CreateStack"
      - "cloudformation:DeleteStack"
      - "cloudformation:UpdateStack"
      - "cloudformation:CreateChangeSet"
      - "cloudformation:DescribeStacks"
      - "cloudformation:DescribeStackEvents"
      - "cloudformation:DescribeStackResources"
      - "cloudformation:GetTemplate"
      - "cloudformation:ValidateTemplate"
  - Effect: "Allow"
    Resource: "*"
    Action:
      - "s3:PutObject"
      - "s3:GetObject"
      - "s3:ListBucket"
  - Effect: "Allow"
    Resource: "*"
    Action:
      - "ec2:DescribeVpcs"
      - "ec2:DescribeSubnets"
      - "ec2:DescribeKeyPairs"

functions:
  run:
    handler: handler.launch_fah_solver
    environment:
      TEMPLATE_URL: https://s3.amazonaws.com/folding-together-artifacts/cloudformation/foldingathome.yaml
      SUBNET_IDS: subnet-2ec0fc10,subnet-75ba187b,subnet-8ba048ed,subnet-b868d0f5,subnet-c007f0e1
      VPC_ID: vpc-394e4a43
      KEY_NAME: folding_nodes


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
